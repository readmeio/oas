{
  "openapi": "3.0.0",
  "info": {
    "title": "Polymorhism quirks",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://httpbin.org"
    }
  ],
  "paths": {
    "/allof-with-empty-object-property": {
      "post": {
        "description": "Within the allOf of this requestBody there is a `data` object property that has no schema.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/api.WithdrawalRequest"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "token": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/core.Token"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "$ref": "#/components/schemas/core.TokenData"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/allof-with-oneOf": {
      "post": {
        "description": "Within the allOf of this requestBody there is a top-level oneOf.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "api.WithdrawalRequest": {
        "type": "object",
        "required": ["amount", "token", "user"],
        "properties": {
          "amount": {
            "type": "string"
          },
          "token": {
            "$ref": "#/components/schemas/core.Token"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "core.TokenData": {
        "type": "object",
        "properties": {
          "decimals": {
            "type": "integer",
            "example": 18
          },
          "token_address": {
            "type": "string"
          },
          "token_id": {
            "type": "string",
            "example": "200"
          }
        }
      },
      "core.Token": {
        "type": "object",
        "properties": {
          "data": {},
          "type": {
            "type": "string"
          }
        }
      },
      "QuoteCreationRequest": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "quoteType": {
                "enum": ["balance_transfer", "payout"],
                "type": "string",
                "title": "QuoteType",
                "description": "The type of the quote."
              },
              "lockPeriod": {
                "enum": ["5_mins", "15_mins", "1_hour", "4_hours", "8_hours", "24_hours"],
                "type": "string",
                "title": "LockPeriod",
                "default": "5_mins",
                "example": "15_mins",
                "description": "The time period for which the quote is locked."
              },
              "conversionSchedule": {
                "enum": ["immediate", "end_of_day", "next_day", "2_days"],
                "type": "string",
                "title": "ConversionSchedule",
                "default": "immediate",
                "example": "immediate",
                "description": "The time period after which the conversion should be settled."
              },
              "sourceCurrencyCode": {
                "type": "string",
                "example": "USD",
                "maxLength": 3,
                "minLength": 3,
                "description": "3-letter [ISO-4217 currency code](https://www.iso.org/iso-4217-currency-codes.html) for the source amount."
              },
              "destinationCurrencyCode": {
                "type": "string",
                "example": "SGD",
                "maxLength": 3,
                "minLength": 3,
                "description": "3-letter [ISO-4217 currency code](https://www.iso.org/iso-4217-currency-codes.html) for the destination amount."
              }
            }
          },
          {
            "$ref": "#/components/schemas/EitherSourceOrDestinationAmountOrNoAmount"
          }
        ],
        "required": ["sourceCurrencyCode", "destinationCurrencyCode", "quoteType"]
      },
      "EitherSourceOrDestinationAmountOrNoAmount": {
        "oneOf": [
          {
            "type": "object",
            "title": "With Source Amount",
            "properties": {
              "sourceAmount": {
                "type": "number",
                "format": "double",
                "example": 13.42,
                "minimum": 0,
                "nullable": true,
                "description": "The source amount to be converted to the destination currency. This value is for reference only and will not be used as the actual conversion amount.",
                "exclusiveMinimum": true
              }
            }
          }
        ]
      }
    }
  }
}
