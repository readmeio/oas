// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`#dereference() > should add metadata to components pre-dereferencing to preserve their lineage > stored as \`title\` if the \`preserveRefAsJSONSchemaTitle\` option is supplied 1`] = `
{
  "/pet": {
    "post": {
      "description": "",
      "operationId": "addPet",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "category": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "title": "Category",
                  "type": "object",
                  "x-readme-ref-name": "Category",
                  "xml": {
                    "name": "Category",
                  },
                },
                "id": {
                  "default": 40,
                  "example": 25,
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer",
                },
                "name": {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": {
                  "items": {
                    "example": "https://example.com/photo.png",
                    "type": "string",
                  },
                  "type": "array",
                  "xml": {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": {
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": {
                        "type": "string",
                      },
                    },
                    "title": "Tag",
                    "type": "object",
                    "x-readme-ref-name": "Tag",
                    "xml": {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": [
                "name",
                "photoUrls",
              ],
              "title": "Pet",
              "type": "object",
              "x-readme-ref-name": "Pet",
              "xml": {
                "name": "Pet",
              },
            },
          },
          "application/xml": {
            "schema": {
              "properties": {
                "category": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "title": "Category",
                  "type": "object",
                  "x-readme-ref-name": "Category",
                  "xml": {
                    "name": "Category",
                  },
                },
                "id": {
                  "default": 40,
                  "example": 25,
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer",
                },
                "name": {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": {
                  "items": {
                    "example": "https://example.com/photo.png",
                    "type": "string",
                  },
                  "type": "array",
                  "xml": {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": {
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": {
                        "type": "string",
                      },
                    },
                    "title": "Tag",
                    "type": "object",
                    "x-readme-ref-name": "Tag",
                    "xml": {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": [
                "name",
                "photoUrls",
              ],
              "title": "Pet",
              "type": "object",
              "x-readme-ref-name": "Pet",
              "xml": {
                "name": "Pet",
              },
            },
          },
        },
        "description": "Pet object that needs to be added to the store",
        "required": true,
      },
      "responses": {
        "405": {
          "description": "Invalid input",
        },
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Add a new pet to the store",
      "tags": [
        "pet",
      ],
    },
    "put": {
      "description": "",
      "operationId": "updatePet",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "category": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "title": "Category",
                  "type": "object",
                  "x-readme-ref-name": "Category",
                  "xml": {
                    "name": "Category",
                  },
                },
                "id": {
                  "default": 40,
                  "example": 25,
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer",
                },
                "name": {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": {
                  "items": {
                    "example": "https://example.com/photo.png",
                    "type": "string",
                  },
                  "type": "array",
                  "xml": {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": {
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": {
                        "type": "string",
                      },
                    },
                    "title": "Tag",
                    "type": "object",
                    "x-readme-ref-name": "Tag",
                    "xml": {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": [
                "name",
                "photoUrls",
              ],
              "title": "Pet",
              "type": "object",
              "x-readme-ref-name": "Pet",
              "xml": {
                "name": "Pet",
              },
            },
          },
          "application/xml": {
            "schema": {
              "properties": {
                "category": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "title": "Category",
                  "type": "object",
                  "x-readme-ref-name": "Category",
                  "xml": {
                    "name": "Category",
                  },
                },
                "id": {
                  "default": 40,
                  "example": 25,
                  "format": "int64",
                  "readOnly": true,
                  "type": "integer",
                },
                "name": {
                  "example": "doggie",
                  "type": "string",
                },
                "photoUrls": {
                  "items": {
                    "example": "https://example.com/photo.png",
                    "type": "string",
                  },
                  "type": "array",
                  "xml": {
                    "name": "photoUrl",
                    "wrapped": true,
                  },
                },
                "status": {
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": {
                        "type": "string",
                      },
                    },
                    "title": "Tag",
                    "type": "object",
                    "x-readme-ref-name": "Tag",
                    "xml": {
                      "name": "Tag",
                    },
                  },
                  "type": "array",
                  "xml": {
                    "name": "tag",
                    "wrapped": true,
                  },
                },
              },
              "required": [
                "name",
                "photoUrls",
              ],
              "title": "Pet",
              "type": "object",
              "x-readme-ref-name": "Pet",
              "xml": {
                "name": "Pet",
              },
            },
          },
        },
        "description": "Pet object that needs to be added to the store",
        "required": true,
      },
      "responses": {
        "400": {
          "description": "Invalid ID supplied",
        },
        "404": {
          "description": "Pet not found",
        },
        "405": {
          "description": "Validation exception",
        },
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Update an existing pet",
      "tags": [
        "pet",
      ],
    },
  },
  "/pet/findByStatus": {
    "get": {
      "description": "Multiple status values can be provided with comma separated strings",
      "operationId": "findPetsByStatus",
      "parameters": [
        {
          "description": "Status values that need to be considered for filter",
          "explode": true,
          "in": "query",
          "name": "status",
          "required": true,
          "schema": {
            "items": {
              "default": "available",
              "enum": [
                "available",
                "pending",
                "sold",
              ],
              "type": "string",
            },
            "type": "array",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "properties": {
                    "category": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "title": "Category",
                      "type": "object",
                      "x-readme-ref-name": "Category",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "id": {
                      "default": 40,
                      "example": 25,
                      "format": "int64",
                      "readOnly": true,
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "example": "https://example.com/photo.png",
                        "type": "string",
                      },
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "title": "Tag",
                        "type": "object",
                        "x-readme-ref-name": "Tag",
                        "xml": {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "title": "Pet",
                  "type": "object",
                  "x-readme-ref-name": "Pet",
                  "xml": {
                    "name": "Pet",
                  },
                },
                "type": "array",
              },
            },
            "application/xml": {
              "schema": {
                "items": {
                  "properties": {
                    "category": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "title": "Category",
                      "type": "object",
                      "x-readme-ref-name": "Category",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "id": {
                      "default": 40,
                      "example": 25,
                      "format": "int64",
                      "readOnly": true,
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "example": "https://example.com/photo.png",
                        "type": "string",
                      },
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "title": "Tag",
                        "type": "object",
                        "x-readme-ref-name": "Tag",
                        "xml": {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "title": "Pet",
                  "type": "object",
                  "x-readme-ref-name": "Pet",
                  "xml": {
                    "name": "Pet",
                  },
                },
                "type": "array",
              },
            },
          },
          "description": "successful operation",
        },
        "400": {
          "description": "Invalid status value",
        },
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Finds Pets by status",
      "tags": [
        "pet",
      ],
    },
  },
  "/pet/findByTags": {
    "get": {
      "deprecated": true,
      "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
      "operationId": "findPetsByTags",
      "parameters": [
        {
          "description": "Tags to filter by",
          "explode": true,
          "in": "query",
          "name": "tags",
          "required": true,
          "schema": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "properties": {
                    "category": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "title": "Category",
                      "type": "object",
                      "x-readme-ref-name": "Category",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "id": {
                      "default": 40,
                      "example": 25,
                      "format": "int64",
                      "readOnly": true,
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "example": "https://example.com/photo.png",
                        "type": "string",
                      },
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "title": "Tag",
                        "type": "object",
                        "x-readme-ref-name": "Tag",
                        "xml": {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "title": "Pet",
                  "type": "object",
                  "x-readme-ref-name": "Pet",
                  "xml": {
                    "name": "Pet",
                  },
                },
                "type": "array",
              },
            },
            "application/xml": {
              "schema": {
                "items": {
                  "properties": {
                    "category": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "title": "Category",
                      "type": "object",
                      "x-readme-ref-name": "Category",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "id": {
                      "default": 40,
                      "example": 25,
                      "format": "int64",
                      "readOnly": true,
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "example": "https://example.com/photo.png",
                        "type": "string",
                      },
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "title": "Tag",
                        "type": "object",
                        "x-readme-ref-name": "Tag",
                        "xml": {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "title": "Pet",
                  "type": "object",
                  "x-readme-ref-name": "Pet",
                  "xml": {
                    "name": "Pet",
                  },
                },
                "type": "array",
              },
            },
          },
          "description": "successful operation",
        },
        "400": {
          "description": "Invalid tag value",
        },
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Finds Pets by tags",
      "tags": [
        "pet",
      ],
    },
  },
  "/pet/{petId}": {
    "delete": {
      "description": "",
      "operationId": "deletePet",
      "parameters": [
        {
          "in": "header",
          "name": "api_key",
          "required": false,
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "Pet id to delete",
          "in": "path",
          "name": "petId",
          "required": true,
          "schema": {
            "format": "int64",
            "type": "integer",
          },
        },
      ],
      "responses": {
        "400": {
          "description": "Invalid ID supplied",
        },
        "404": {
          "description": "Pet not found",
        },
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Deletes a pet",
      "tags": [
        "pet",
      ],
    },
    "get": {
      "description": "Returns a single pet",
      "operationId": "getPetById",
      "parameters": [
        {
          "description": "ID of pet to return",
          "in": "path",
          "name": "petId",
          "required": true,
          "schema": {
            "format": "int64",
            "type": "integer",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "category": {
                    "properties": {
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": {
                        "type": "string",
                      },
                    },
                    "title": "Category",
                    "type": "object",
                    "x-readme-ref-name": "Category",
                    "xml": {
                      "name": "Category",
                    },
                  },
                  "id": {
                    "default": 40,
                    "example": 25,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "example": "https://example.com/photo.png",
                      "type": "string",
                    },
                    "type": "array",
                    "xml": {
                      "name": "photoUrl",
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "title": "Tag",
                      "type": "object",
                      "x-readme-ref-name": "Tag",
                      "xml": {
                        "name": "Tag",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "name": "tag",
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "title": "Pet",
                "type": "object",
                "x-readme-ref-name": "Pet",
                "xml": {
                  "name": "Pet",
                },
              },
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "category": {
                    "properties": {
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": {
                        "type": "string",
                      },
                    },
                    "title": "Category",
                    "type": "object",
                    "x-readme-ref-name": "Category",
                    "xml": {
                      "name": "Category",
                    },
                  },
                  "id": {
                    "default": 40,
                    "example": 25,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer",
                  },
                  "name": {
                    "example": "doggie",
                    "type": "string",
                  },
                  "photoUrls": {
                    "items": {
                      "example": "https://example.com/photo.png",
                      "type": "string",
                    },
                    "type": "array",
                    "xml": {
                      "name": "photoUrl",
                      "wrapped": true,
                    },
                  },
                  "status": {
                    "description": "pet status in the store",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "title": "Tag",
                      "type": "object",
                      "x-readme-ref-name": "Tag",
                      "xml": {
                        "name": "Tag",
                      },
                    },
                    "type": "array",
                    "xml": {
                      "name": "tag",
                      "wrapped": true,
                    },
                  },
                },
                "required": [
                  "name",
                  "photoUrls",
                ],
                "title": "Pet",
                "type": "object",
                "x-readme-ref-name": "Pet",
                "xml": {
                  "name": "Pet",
                },
              },
            },
          },
          "description": "successful operation",
        },
        "400": {
          "description": "Invalid ID supplied",
        },
        "404": {
          "description": "Pet not found",
        },
        "default": {
          "description": "successful response",
        },
      },
      "security": [
        {
          "api_key": [],
        },
      ],
      "summary": "Find pet by ID",
      "tags": [
        "pet",
      ],
    },
    "post": {
      "description": "",
      "operationId": "updatePetWithForm",
      "parameters": [
        {
          "description": "ID of pet that needs to be updated",
          "in": "path",
          "name": "petId",
          "required": true,
          "schema": {
            "format": "int64",
            "type": "integer",
          },
        },
      ],
      "requestBody": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "properties": {
                "name": {
                  "description": "Updated name of the pet",
                  "type": "string",
                },
                "status": {
                  "description": "Updated status of the pet",
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
        },
      },
      "responses": {
        "405": {
          "description": "Invalid input",
        },
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Updates a pet in the store with form data",
      "tags": [
        "pet",
      ],
    },
  },
  "/pet/{petId}/uploadImage": {
    "post": {
      "description": "",
      "operationId": "uploadFile",
      "parameters": [
        {
          "description": "ID of pet to update",
          "in": "path",
          "name": "petId",
          "required": true,
          "schema": {
            "format": "int64",
            "type": "integer",
          },
        },
      ],
      "requestBody": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "additionalMetadata": {
                  "description": "Additional data to pass to server",
                  "type": "string",
                },
                "file": {
                  "description": "file to upload",
                  "format": "binary",
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
        },
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "code": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "message": {
                    "type": "string",
                  },
                  "type": {
                    "type": "string",
                  },
                },
                "title": "ApiResponse",
                "type": "object",
                "x-readme-ref-name": "ApiResponse",
              },
            },
          },
          "description": "successful operation",
        },
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Uploads an image",
      "tags": [
        "pet",
      ],
    },
  },
  "/store/inventory": {
    "get": {
      "description": "Returns a map of status codes to quantities",
      "operationId": "getInventory",
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "format": "int32",
                  "type": "integer",
                },
                "type": "object",
              },
            },
          },
          "description": "successful operation",
        },
      },
      "security": [
        {
          "api_key": [],
        },
      ],
      "summary": "Returns pet inventories by status",
      "tags": [
        "store",
      ],
    },
  },
  "/store/order": {
    "post": {
      "description": "",
      "operationId": "placeOrder",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "title": "Order",
              "type": "object",
              "x-readme-ref-name": "Order",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
        "description": "order placed for purchasing the pet",
        "required": true,
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "title": "Order",
                "type": "object",
                "x-readme-ref-name": "Order",
                "xml": {
                  "name": "Order",
                },
              },
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "title": "Order",
                "type": "object",
                "x-readme-ref-name": "Order",
                "xml": {
                  "name": "Order",
                },
              },
            },
          },
          "description": "successful operation",
        },
        "400": {
          "description": "Invalid Order",
        },
      },
      "summary": "Place an order for a pet",
      "tags": [
        "store",
      ],
    },
  },
  "/store/order/{orderId}": {
    "delete": {
      "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
      "operationId": "deleteOrder",
      "parameters": [
        {
          "description": "ID of the order that needs to be deleted",
          "in": "path",
          "name": "orderId",
          "required": true,
          "schema": {
            "format": "int64",
            "minimum": 1,
            "type": "integer",
          },
        },
      ],
      "responses": {
        "400": {
          "description": "Invalid ID supplied",
        },
        "404": {
          "description": "Order not found",
        },
      },
      "summary": "Delete purchase order by ID",
      "tags": [
        "store",
      ],
    },
    "get": {
      "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
      "operationId": "getOrderById",
      "parameters": [
        {
          "description": "ID of pet that needs to be fetched",
          "in": "path",
          "name": "orderId",
          "required": true,
          "schema": {
            "format": "int64",
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "title": "Order",
                "type": "object",
                "x-readme-ref-name": "Order",
                "xml": {
                  "name": "Order",
                },
              },
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "title": "Order",
                "type": "object",
                "x-readme-ref-name": "Order",
                "xml": {
                  "name": "Order",
                },
              },
            },
          },
          "description": "successful operation",
        },
        "400": {
          "description": "Invalid ID supplied",
        },
        "404": {
          "description": "Order not found",
        },
      },
      "summary": "Find purchase order by ID",
      "tags": [
        "store",
      ],
    },
  },
  "/user": {
    "post": {
      "description": "This can only be done by the logged in user.",
      "operationId": "createUser",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "email": {
                  "type": "string",
                },
                "firstName": {
                  "type": "string",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": {
                  "type": "string",
                },
                "password": {
                  "type": "string",
                },
                "phone": {
                  "type": "string",
                },
                "userStatus": {
                  "description": "User Status",
                  "format": "int32",
                  "type": "integer",
                },
                "username": {
                  "type": "string",
                },
              },
              "title": "User",
              "type": "object",
              "x-readme-ref-name": "User",
              "xml": {
                "name": "User",
              },
            },
          },
        },
        "description": "Created user object",
        "required": true,
      },
      "responses": {
        "default": {
          "description": "successful operation",
        },
      },
      "summary": "Create user",
      "tags": [
        "user",
      ],
    },
  },
  "/user/createWithArray": {
    "post": {
      "description": "",
      "operationId": "createUsersWithArrayInput",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "properties": {
                  "email": {
                    "type": "string",
                  },
                  "firstName": {
                    "type": "string",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "type": "string",
                  },
                  "password": {
                    "type": "string",
                  },
                  "phone": {
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "type": "string",
                  },
                },
                "title": "User",
                "type": "object",
                "x-readme-ref-name": "User",
                "xml": {
                  "name": "User",
                },
              },
              "type": "array",
            },
          },
        },
        "description": "List of user object",
        "required": true,
      },
      "responses": {
        "default": {
          "description": "successful operation",
        },
      },
      "summary": "Creates list of users with given input array",
      "tags": [
        "user",
      ],
    },
  },
  "/user/createWithList": {
    "post": {
      "description": "",
      "operationId": "createUsersWithListInput",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "properties": {
                  "email": {
                    "type": "string",
                  },
                  "firstName": {
                    "type": "string",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "type": "string",
                  },
                  "password": {
                    "type": "string",
                  },
                  "phone": {
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "type": "string",
                  },
                },
                "title": "User",
                "type": "object",
                "x-readme-ref-name": "User",
                "xml": {
                  "name": "User",
                },
              },
              "type": "array",
            },
          },
        },
        "description": "List of user object",
        "required": true,
      },
      "responses": {
        "default": {
          "description": "successful operation",
        },
      },
      "summary": "Creates list of users with given input array",
      "tags": [
        "user",
      ],
    },
  },
  "/user/login": {
    "get": {
      "description": "",
      "operationId": "loginUser",
      "parameters": [
        {
          "description": "The user name for login",
          "in": "query",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "The password for login in clear text",
          "in": "query",
          "name": "password",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
              },
            },
            "application/xml": {
              "schema": {
                "type": "string",
              },
            },
          },
          "description": "successful operation",
          "headers": {
            "X-Expires-After": {
              "description": "date in UTC when token expires",
              "schema": {
                "format": "date-time",
                "type": "string",
              },
            },
            "X-Rate-Limit": {
              "description": "calls per hour allowed by the user",
              "schema": {
                "format": "int32",
                "type": "integer",
              },
            },
          },
        },
        "400": {
          "description": "Invalid username/password supplied",
        },
      },
      "summary": "Logs user into the system",
      "tags": [
        "user",
      ],
    },
  },
  "/user/logout": {
    "get": {
      "description": "",
      "operationId": "logoutUser",
      "responses": {
        "default": {
          "description": "successful operation",
        },
      },
      "summary": "Logs out current logged in user session",
      "tags": [
        "user",
      ],
    },
  },
  "/user/{username}": {
    "delete": {
      "description": "This can only be done by the logged in user.",
      "operationId": "deleteUser",
      "parameters": [
        {
          "description": "The name that needs to be deleted",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "responses": {
        "400": {
          "description": "Invalid username supplied",
        },
        "404": {
          "description": "User not found",
        },
      },
      "summary": "Delete user",
      "tags": [
        "user",
      ],
    },
    "get": {
      "description": "",
      "operationId": "getUserByName",
      "parameters": [
        {
          "description": "The name that needs to be fetched. Use user1 for testing. ",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                  },
                  "firstName": {
                    "type": "string",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "type": "string",
                  },
                  "password": {
                    "type": "string",
                  },
                  "phone": {
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "type": "string",
                  },
                },
                "title": "User",
                "type": "object",
                "x-readme-ref-name": "User",
                "xml": {
                  "name": "User",
                },
              },
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                  },
                  "firstName": {
                    "type": "string",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "lastName": {
                    "type": "string",
                  },
                  "password": {
                    "type": "string",
                  },
                  "phone": {
                    "type": "string",
                  },
                  "userStatus": {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer",
                  },
                  "username": {
                    "type": "string",
                  },
                },
                "title": "User",
                "type": "object",
                "x-readme-ref-name": "User",
                "xml": {
                  "name": "User",
                },
              },
            },
          },
          "description": "successful operation",
        },
        "400": {
          "description": "Invalid username supplied",
        },
        "404": {
          "description": "User not found",
        },
      },
      "summary": "Get user by user name",
      "tags": [
        "user",
      ],
    },
    "put": {
      "description": "This can only be done by the logged in user.",
      "operationId": "updateUser",
      "parameters": [
        {
          "description": "name that need to be updated",
          "in": "path",
          "name": "username",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "email": {
                  "type": "string",
                },
                "firstName": {
                  "type": "string",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "lastName": {
                  "type": "string",
                },
                "password": {
                  "type": "string",
                },
                "phone": {
                  "type": "string",
                },
                "userStatus": {
                  "description": "User Status",
                  "format": "int32",
                  "type": "integer",
                },
                "username": {
                  "type": "string",
                },
              },
              "title": "User",
              "type": "object",
              "x-readme-ref-name": "User",
              "xml": {
                "name": "User",
              },
            },
          },
        },
        "description": "Updated user object",
        "required": true,
      },
      "responses": {
        "400": {
          "description": "Invalid user supplied",
        },
        "404": {
          "description": "User not found",
        },
      },
      "summary": "Updated user",
      "tags": [
        "user",
      ],
    },
  },
}
`;

exports[`#dereference() > should add metadata to components pre-dereferencing to preserve their lineage > stored as \`x-readme-ref-name 1`] = `
{
  "/multischema/of-everything": {
    "post": {
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "items": {
                        "properties": {
                          "ObjectArrayPropInArray": {
                            "items": {
                              "properties": {
                                "BoolProp": {
                                  "type": "boolean",
                                },
                                "NumProp": {
                                  "type": "number",
                                },
                                "StringProp": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "x-readme-ref-name": "FlatObject",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfFlatObjects",
                          },
                          "ObjectPropInArray": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "PrimitiveArrayPropInArray": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfPrimitives",
                          },
                          "StringPrimitive": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                      },
                      "type": "array",
                      "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                    },
                    {
                      "properties": {
                        "flatObj": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "objEverything": {
                          "properties": {
                            "ArrayOfObjectsOfObjectsAndArrays": {
                              "items": {
                                "properties": {
                                  "ObjectArrayPropInArray": {
                                    "items": {
                                      "properties": {
                                        "BoolProp": {
                                          "type": "boolean",
                                        },
                                        "NumProp": {
                                          "type": "number",
                                        },
                                        "StringProp": {
                                          "type": "string",
                                        },
                                      },
                                      "type": "object",
                                      "x-readme-ref-name": "FlatObject",
                                    },
                                    "type": "array",
                                    "x-readme-ref-name": "ArrayOfFlatObjects",
                                  },
                                  "ObjectPropInArray": {
                                    "properties": {
                                      "BoolProp": {
                                        "type": "boolean",
                                      },
                                      "NumProp": {
                                        "type": "number",
                                      },
                                      "StringProp": {
                                        "type": "string",
                                      },
                                    },
                                    "type": "object",
                                    "x-readme-ref-name": "FlatObject",
                                  },
                                  "PrimitiveArrayPropInArray": {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                    "x-readme-ref-name": "ArrayOfPrimitives",
                                  },
                                  "StringPrimitive": {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                                "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                              },
                              "type": "array",
                              "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                            },
                            "ObjectOfObjectsAndArrays": {
                              "properties": {
                                "ObjectArrayPropInArray": {
                                  "items": {
                                    "properties": {
                                      "BoolProp": {
                                        "type": "boolean",
                                      },
                                      "NumProp": {
                                        "type": "number",
                                      },
                                      "StringProp": {
                                        "type": "string",
                                      },
                                    },
                                    "type": "object",
                                    "x-readme-ref-name": "FlatObject",
                                  },
                                  "type": "array",
                                  "x-readme-ref-name": "ArrayOfFlatObjects",
                                },
                                "ObjectPropInArray": {
                                  "properties": {
                                    "BoolProp": {
                                      "type": "boolean",
                                    },
                                    "NumProp": {
                                      "type": "number",
                                    },
                                    "StringProp": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                  "x-readme-ref-name": "FlatObject",
                                },
                                "PrimitiveArrayPropInArray": {
                                  "items": {
                                    "type": "string",
                                  },
                                  "type": "array",
                                  "x-readme-ref-name": "ArrayOfPrimitives",
                                },
                                "StringPrimitive": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                            },
                            "StringPrimitive": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "ObjectOfEverything",
                        },
                      },
                      "type": "object",
                    },
                  ],
                },
                {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                  "x-readme-ref-name": "ArrayOfPrimitives",
                },
                {
                  "items": {
                    "properties": {
                      "BoolProp": {
                        "type": "boolean",
                      },
                      "NumProp": {
                        "type": "number",
                      },
                      "StringProp": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "x-readme-ref-name": "FlatObject",
                  },
                  "type": "array",
                  "x-readme-ref-name": "ArrayOfFlatObjects",
                },
                {
                  "properties": {
                    "BoolProp": {
                      "type": "boolean",
                    },
                    "NumProp": {
                      "type": "number",
                    },
                    "StringProp": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "FlatObject",
                },
                {
                  "properties": {
                    "ArrayOfObjectsOfObjectsAndArrays": {
                      "items": {
                        "properties": {
                          "ObjectArrayPropInArray": {
                            "items": {
                              "properties": {
                                "BoolProp": {
                                  "type": "boolean",
                                },
                                "NumProp": {
                                  "type": "number",
                                },
                                "StringProp": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "x-readme-ref-name": "FlatObject",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfFlatObjects",
                          },
                          "ObjectPropInArray": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "PrimitiveArrayPropInArray": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfPrimitives",
                          },
                          "StringPrimitive": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                      },
                      "type": "array",
                      "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                    },
                    "ObjectOfObjectsAndArrays": {
                      "properties": {
                        "ObjectArrayPropInArray": {
                          "items": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfFlatObjects",
                        },
                        "ObjectPropInArray": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "PrimitiveArrayPropInArray": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfPrimitives",
                        },
                        "StringPrimitive": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                    },
                    "StringPrimitive": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "ObjectOfEverything",
                },
              ],
              "x-readme-ref-name": "MultischemaOfEverything",
            },
          },
        },
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "oneOf": [
                      {
                        "items": {
                          "properties": {
                            "ObjectArrayPropInArray": {
                              "items": {
                                "properties": {
                                  "BoolProp": {
                                    "type": "boolean",
                                  },
                                  "NumProp": {
                                    "type": "number",
                                  },
                                  "StringProp": {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                                "x-readme-ref-name": "FlatObject",
                              },
                              "type": "array",
                              "x-readme-ref-name": "ArrayOfFlatObjects",
                            },
                            "ObjectPropInArray": {
                              "properties": {
                                "BoolProp": {
                                  "type": "boolean",
                                },
                                "NumProp": {
                                  "type": "number",
                                },
                                "StringProp": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "x-readme-ref-name": "FlatObject",
                            },
                            "PrimitiveArrayPropInArray": {
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                              "x-readme-ref-name": "ArrayOfPrimitives",
                            },
                            "StringPrimitive": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                      },
                      {
                        "properties": {
                          "flatObj": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "objEverything": {
                            "properties": {
                              "ArrayOfObjectsOfObjectsAndArrays": {
                                "items": {
                                  "properties": {
                                    "ObjectArrayPropInArray": {
                                      "items": {
                                        "properties": {
                                          "BoolProp": {
                                            "type": "boolean",
                                          },
                                          "NumProp": {
                                            "type": "number",
                                          },
                                          "StringProp": {
                                            "type": "string",
                                          },
                                        },
                                        "type": "object",
                                        "x-readme-ref-name": "FlatObject",
                                      },
                                      "type": "array",
                                      "x-readme-ref-name": "ArrayOfFlatObjects",
                                    },
                                    "ObjectPropInArray": {
                                      "properties": {
                                        "BoolProp": {
                                          "type": "boolean",
                                        },
                                        "NumProp": {
                                          "type": "number",
                                        },
                                        "StringProp": {
                                          "type": "string",
                                        },
                                      },
                                      "type": "object",
                                      "x-readme-ref-name": "FlatObject",
                                    },
                                    "PrimitiveArrayPropInArray": {
                                      "items": {
                                        "type": "string",
                                      },
                                      "type": "array",
                                      "x-readme-ref-name": "ArrayOfPrimitives",
                                    },
                                    "StringPrimitive": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                  "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                                },
                                "type": "array",
                                "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                              },
                              "ObjectOfObjectsAndArrays": {
                                "properties": {
                                  "ObjectArrayPropInArray": {
                                    "items": {
                                      "properties": {
                                        "BoolProp": {
                                          "type": "boolean",
                                        },
                                        "NumProp": {
                                          "type": "number",
                                        },
                                        "StringProp": {
                                          "type": "string",
                                        },
                                      },
                                      "type": "object",
                                      "x-readme-ref-name": "FlatObject",
                                    },
                                    "type": "array",
                                    "x-readme-ref-name": "ArrayOfFlatObjects",
                                  },
                                  "ObjectPropInArray": {
                                    "properties": {
                                      "BoolProp": {
                                        "type": "boolean",
                                      },
                                      "NumProp": {
                                        "type": "number",
                                      },
                                      "StringProp": {
                                        "type": "string",
                                      },
                                    },
                                    "type": "object",
                                    "x-readme-ref-name": "FlatObject",
                                  },
                                  "PrimitiveArrayPropInArray": {
                                    "items": {
                                      "type": "string",
                                    },
                                    "type": "array",
                                    "x-readme-ref-name": "ArrayOfPrimitives",
                                  },
                                  "StringPrimitive": {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                                "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                              },
                              "StringPrimitive": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "ObjectOfEverything",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  {
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                    "x-readme-ref-name": "ArrayOfPrimitives",
                  },
                  {
                    "items": {
                      "properties": {
                        "BoolProp": {
                          "type": "boolean",
                        },
                        "NumProp": {
                          "type": "number",
                        },
                        "StringProp": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "x-readme-ref-name": "FlatObject",
                    },
                    "type": "array",
                    "x-readme-ref-name": "ArrayOfFlatObjects",
                  },
                  {
                    "properties": {
                      "BoolProp": {
                        "type": "boolean",
                      },
                      "NumProp": {
                        "type": "number",
                      },
                      "StringProp": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "x-readme-ref-name": "FlatObject",
                  },
                  {
                    "properties": {
                      "ArrayOfObjectsOfObjectsAndArrays": {
                        "items": {
                          "properties": {
                            "ObjectArrayPropInArray": {
                              "items": {
                                "properties": {
                                  "BoolProp": {
                                    "type": "boolean",
                                  },
                                  "NumProp": {
                                    "type": "number",
                                  },
                                  "StringProp": {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                                "x-readme-ref-name": "FlatObject",
                              },
                              "type": "array",
                              "x-readme-ref-name": "ArrayOfFlatObjects",
                            },
                            "ObjectPropInArray": {
                              "properties": {
                                "BoolProp": {
                                  "type": "boolean",
                                },
                                "NumProp": {
                                  "type": "number",
                                },
                                "StringProp": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "x-readme-ref-name": "FlatObject",
                            },
                            "PrimitiveArrayPropInArray": {
                              "items": {
                                "type": "string",
                              },
                              "type": "array",
                              "x-readme-ref-name": "ArrayOfPrimitives",
                            },
                            "StringPrimitive": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                      },
                      "ObjectOfObjectsAndArrays": {
                        "properties": {
                          "ObjectArrayPropInArray": {
                            "items": {
                              "properties": {
                                "BoolProp": {
                                  "type": "boolean",
                                },
                                "NumProp": {
                                  "type": "number",
                                },
                                "StringProp": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "x-readme-ref-name": "FlatObject",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfFlatObjects",
                          },
                          "ObjectPropInArray": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "PrimitiveArrayPropInArray": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfPrimitives",
                          },
                          "StringPrimitive": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                      },
                      "StringPrimitive": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "x-readme-ref-name": "ObjectOfEverything",
                  },
                ],
                "x-readme-ref-name": "MultischemaOfEverything",
              },
            },
          },
          "description": "OK",
        },
      },
      "summary": "Multischema of Everything",
    },
  },
  "/top-level-array/of-everything": {
    "post": {
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "properties": {
                  "ArrayOfObjectsOfObjectsAndArrays": {
                    "items": {
                      "properties": {
                        "ObjectArrayPropInArray": {
                          "items": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfFlatObjects",
                        },
                        "ObjectPropInArray": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "PrimitiveArrayPropInArray": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfPrimitives",
                        },
                        "StringPrimitive": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                    },
                    "type": "array",
                    "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                  },
                  "ObjectOfObjectsAndArrays": {
                    "properties": {
                      "ObjectArrayPropInArray": {
                        "items": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfFlatObjects",
                      },
                      "ObjectPropInArray": {
                        "properties": {
                          "BoolProp": {
                            "type": "boolean",
                          },
                          "NumProp": {
                            "type": "number",
                          },
                          "StringProp": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "FlatObject",
                      },
                      "PrimitiveArrayPropInArray": {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfPrimitives",
                      },
                      "StringPrimitive": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                  },
                  "StringPrimitive": {
                    "type": "string",
                  },
                },
                "type": "object",
                "x-readme-ref-name": "ObjectOfEverything",
              },
              "type": "array",
            },
          },
        },
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "properties": {
                    "ArrayOfObjectsOfObjectsAndArrays": {
                      "items": {
                        "properties": {
                          "ObjectArrayPropInArray": {
                            "items": {
                              "properties": {
                                "BoolProp": {
                                  "type": "boolean",
                                },
                                "NumProp": {
                                  "type": "number",
                                },
                                "StringProp": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "x-readme-ref-name": "FlatObject",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfFlatObjects",
                          },
                          "ObjectPropInArray": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "PrimitiveArrayPropInArray": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "x-readme-ref-name": "ArrayOfPrimitives",
                          },
                          "StringPrimitive": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                      },
                      "type": "array",
                      "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                    },
                    "ObjectOfObjectsAndArrays": {
                      "properties": {
                        "ObjectArrayPropInArray": {
                          "items": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfFlatObjects",
                        },
                        "ObjectPropInArray": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "PrimitiveArrayPropInArray": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfPrimitives",
                        },
                        "StringPrimitive": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                    },
                    "StringPrimitive": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "ObjectOfEverything",
                },
                "type": "array",
              },
            },
          },
          "description": "OK",
        },
      },
      "summary": "Array of Everything",
    },
  },
  "/top-level-array/simple": {
    "post": {
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "properties": {
                  "BoolProp": {
                    "type": "boolean",
                  },
                  "NumProp": {
                    "type": "number",
                  },
                  "StringProp": {
                    "type": "string",
                  },
                },
                "type": "object",
                "x-readme-ref-name": "FlatObject",
              },
              "type": "array",
              "x-readme-ref-name": "ArrayOfFlatObjects",
            },
          },
        },
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "properties": {
                    "BoolProp": {
                      "type": "boolean",
                    },
                    "NumProp": {
                      "type": "number",
                    },
                    "StringProp": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "FlatObject",
                },
                "type": "array",
                "x-readme-ref-name": "ArrayOfFlatObjects",
              },
            },
          },
          "description": "OK",
        },
      },
      "summary": "Simple Array",
    },
  },
  "/top-level-object/of-everything": {
    "post": {
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "ArrayOfObjectsOfObjectsAndArrays": {
                  "items": {
                    "properties": {
                      "ObjectArrayPropInArray": {
                        "items": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfFlatObjects",
                      },
                      "ObjectPropInArray": {
                        "properties": {
                          "BoolProp": {
                            "type": "boolean",
                          },
                          "NumProp": {
                            "type": "number",
                          },
                          "StringProp": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "FlatObject",
                      },
                      "PrimitiveArrayPropInArray": {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfPrimitives",
                      },
                      "StringPrimitive": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                  },
                  "type": "array",
                  "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                },
                "ObjectOfObjectsAndArrays": {
                  "properties": {
                    "ObjectArrayPropInArray": {
                      "items": {
                        "properties": {
                          "BoolProp": {
                            "type": "boolean",
                          },
                          "NumProp": {
                            "type": "number",
                          },
                          "StringProp": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "FlatObject",
                      },
                      "type": "array",
                      "x-readme-ref-name": "ArrayOfFlatObjects",
                    },
                    "ObjectPropInArray": {
                      "properties": {
                        "BoolProp": {
                          "type": "boolean",
                        },
                        "NumProp": {
                          "type": "number",
                        },
                        "StringProp": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "x-readme-ref-name": "FlatObject",
                    },
                    "PrimitiveArrayPropInArray": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                      "x-readme-ref-name": "ArrayOfPrimitives",
                    },
                    "StringPrimitive": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                },
                "StringPrimitive": {
                  "type": "string",
                },
              },
              "type": "object",
              "x-readme-ref-name": "ObjectOfEverything",
            },
          },
        },
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ArrayOfObjectsOfObjectsAndArrays": {
                    "items": {
                      "properties": {
                        "ObjectArrayPropInArray": {
                          "items": {
                            "properties": {
                              "BoolProp": {
                                "type": "boolean",
                              },
                              "NumProp": {
                                "type": "number",
                              },
                              "StringProp": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "x-readme-ref-name": "FlatObject",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfFlatObjects",
                        },
                        "ObjectPropInArray": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "PrimitiveArrayPropInArray": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "x-readme-ref-name": "ArrayOfPrimitives",
                        },
                        "StringPrimitive": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                    },
                    "type": "array",
                    "x-readme-ref-name": "ArrayOfObjectsOfObjectsAndArrays",
                  },
                  "ObjectOfObjectsAndArrays": {
                    "properties": {
                      "ObjectArrayPropInArray": {
                        "items": {
                          "properties": {
                            "BoolProp": {
                              "type": "boolean",
                            },
                            "NumProp": {
                              "type": "number",
                            },
                            "StringProp": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "x-readme-ref-name": "FlatObject",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfFlatObjects",
                      },
                      "ObjectPropInArray": {
                        "properties": {
                          "BoolProp": {
                            "type": "boolean",
                          },
                          "NumProp": {
                            "type": "number",
                          },
                          "StringProp": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "x-readme-ref-name": "FlatObject",
                      },
                      "PrimitiveArrayPropInArray": {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "x-readme-ref-name": "ArrayOfPrimitives",
                      },
                      "StringPrimitive": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "x-readme-ref-name": "ObjectOfObjectsAndArrays",
                  },
                  "StringPrimitive": {
                    "type": "string",
                  },
                },
                "type": "object",
                "x-readme-ref-name": "ObjectOfEverything",
              },
            },
          },
          "description": "OK",
        },
      },
      "summary": "Object of Everything",
    },
  },
  "/top-level-object/simple": {
    "post": {
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "nest1": {
                  "properties": {
                    "BoolProp": {
                      "type": "boolean",
                    },
                    "NumProp": {
                      "type": "number",
                    },
                    "StringProp": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "FlatObject",
                },
                "nest2": {
                  "properties": {
                    "BoolProp": {
                      "type": "boolean",
                    },
                    "NumProp": {
                      "type": "number",
                    },
                    "StringProp": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "FlatObject",
                },
                "nest3": {
                  "properties": {
                    "BoolProp": {
                      "type": "boolean",
                    },
                    "NumProp": {
                      "type": "number",
                    },
                    "StringProp": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "x-readme-ref-name": "FlatObject",
                },
              },
              "type": "object",
            },
          },
        },
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "nest": {
                    "properties": {
                      "BoolProp": {
                        "type": "boolean",
                      },
                      "NumProp": {
                        "type": "number",
                      },
                      "StringProp": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "x-readme-ref-name": "FlatObject",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "OK",
        },
      },
      "summary": "Simple Object",
    },
  },
}
`;

exports[`#operation() > should return a default when no operation 1`] = `
Operation {
  "api": {},
  "callbackExamples": undefined,
  "contentType": undefined,
  "method": "get",
  "path": "/unknown",
  "requestBodyExamples": undefined,
  "responseExamples": undefined,
  "schema": {
    "parameters": [],
  },
}
`;
