// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#getParametersAsJsonSchema() should return json schema 1`] = `
Array [
  Object {
    "label": "Body Params",
    "schema": Object {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": Object {
        "category": Object {
          "properties": Object {
            "id": Object {
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -9223372036854776000,
              "type": "integer",
            },
            "name": Object {
              "type": "string",
            },
          },
          "type": "object",
          "x-readme-ref-name": "Category",
        },
        "id": Object {
          "default": 40,
          "examples": Array [
            25,
          ],
          "format": "int64",
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "readOnly": true,
          "type": "integer",
        },
        "name": Object {
          "examples": Array [
            "doggie",
          ],
          "type": "string",
        },
        "photoUrls": Object {
          "items": Object {
            "examples": Array [
              "https://example.com/photo.png",
            ],
            "type": "string",
          },
          "type": "array",
        },
        "status": Object {
          "description": "pet status in the store",
          "enum": Array [
            "available",
            "pending",
            "sold",
          ],
          "type": "string",
        },
        "tags": Object {
          "items": Object {
            "properties": Object {
              "id": Object {
                "format": "int64",
                "maximum": 9223372036854776000,
                "minimum": -9223372036854776000,
                "type": "integer",
              },
              "name": Object {
                "type": "string",
              },
            },
            "type": "object",
            "x-readme-ref-name": "Tag",
          },
          "type": "array",
        },
      },
      "required": Array [
        "name",
        "photoUrls",
      ],
      "type": "object",
      "x-readme-ref-name": "Pet",
    },
    "type": "body",
  },
]
`;

exports[`#prepareSecurity() should work for petstore 1`] = `
Object {
  "OAuth2": Array [
    Object {
      "_key": "petstore_auth",
      "flows": Object {
        "implicit": Object {
          "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
          "scopes": Object {
            "read:pets": "read your pets",
            "write:pets": "modify pets in your account",
          },
        },
      },
      "type": "oauth2",
    },
  ],
}
`;
