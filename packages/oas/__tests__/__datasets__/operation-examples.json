{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://httpbin.org/"
    }
  ],
  "info": {
    "title": "Operations with and without examples",
    "version": "1.0"
  },
  "paths": {
    "/examples-at-mediaType-level": {
      "post": {
        "description": "This operation has no requestBody or response schemas, but has curated examples within `examples` at the mediaType level.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "userRegistration": {
                  "value": {
                    "user": {
                      "id": 12343354,
                      "email": "test@example.com",
                      "name": "Test user name"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "user": {
                        "email": "test@example.com",
                        "name": "Test user name"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>"
                  }
                }
              }
            }
          },
          "default": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "user": {
                        "id": 12343354,
                        "email": "test@example.com",
                        "name": "Test user name"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "callbacks": {
          "myCallback": {
            "{$request.query.queryUrl}": {
              "post": {
                "responses": {
                  "200": {
                    "description": "OK",
                    "content": {
                      "application/json": {
                        "examples": {
                          "response": {
                            "value": {
                              "user": {
                                "email": "test@example.com",
                                "name": "Test user name"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "Validation failed",
                    "content": {
                      "application/xml": {
                        "examples": {
                          "response": {
                            "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/single-media-type-single-example-in-example-prop": {
      "post": {
        "description": "This operation handles a single media type a single request and response example.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "id": 12343354,
                "email": "test@example.com",
                "name": "Test user name"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "id": 12343354,
                  "email": "test@example.com",
                  "name": "Test user name"
                }
              }
            }
          }
        }
      }
    },
    "/single-media-type-single-example-in-example-prop-with-ref": {
      "post": {
        "description": "This operation handles a single media type with a single request and response example.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "$ref": "#/components/examples/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "$ref": "#/components/examples/user"
                }
              }
            }
          }
        }
      }
    },
    "/single-media-type-single-example-in-example-prop-thats-a-string": {
      "post": {
        "description": "This operation handles a single media type with single request and response example that's a string.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": "column1,column2,column3,column4"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": "column1,column2,column3,column4"
              }
            }
          }
        }
      }
    },
    "/single-media-type-single-example-in-examples-prop-that-are-strings": {
      "post": {
        "description": "This operation handles a single media type with single example in an `examples` property that's a string.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "cat": {
                  "summary": "An example of a cat",
                  "value": "{\n  \"name\": \"Fluffy\",\n  \"petType\": \"Cat\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "cat": {
                    "summary": "An example of a cat",
                    "value": "{\n  \"name\": \"Fluffy\",\n  \"petType\": \"Cat\"\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/single-media-type-single-example-in-examples-prop-that-are-arrays": {
      "post": {
        "description": "This operation handles a single media type with single example in an `examples` property that are arrays.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "cat": {
                  "summary": "An example of a cat",
                  "value": "[\n  {\n    \"name\": \"Fluffy\",\n    \"petType\": \"Cat\"\n  }\n]"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "cat": {
                    "summary": "An example of a cat",
                    "value": "[\n  {\n    \"name\": \"Fluffy\",\n    \"petType\": \"Cat\"\n  }\n]"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/multi-media-types-multiple-examples": {
      "post": {
        "description": "This operation handles multiple media types with multiple examples.",
        "requestBody": {
          "required": true,
          "content": {
            "text/plain": {
              "examples": {
                "response": {
                  "value": "OK"
                }
              }
            },
            "application/json": {
              "examples": {
                "cat": {
                  "summary": "An example of a cat",
                  "value": {
                    "name": "Fluffy",
                    "petType": "Cat"
                  }
                },
                "dog": {
                  "summary": "An example of a dog with a cat's name",
                  "value": {
                    "name": "Puma",
                    "petType": "Dog"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "examples": {
                  "response": {
                    "value": "OK"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "cat": {
                    "summary": "An example of a cat",
                    "value": {
                      "name": "Fluffy",
                      "petType": "Cat"
                    }
                  },
                  "dog": {
                    "summary": "An example of a dog with a cat's name",
                    "value": {
                      "name": "Puma",
                      "petType": "Dog"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/xml": {
                "examples": {
                  "response": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>"
                  }
                }
              }
            }
          }
        },
        "callbacks": {
          "myCallback": {
            "{$request.query.queryUrl}": {
              "post": {
                "responses": {
                  "200": {
                    "description": "OK",
                    "content": {
                      "text/plain": {
                        "examples": {
                          "response": {
                            "value": "OK"
                          }
                        }
                      },
                      "application/json": {
                        "examples": {
                          "cat": {
                            "summary": "An example of a cat",
                            "value": {
                              "name": "Fluffy",
                              "petType": "Cat"
                            }
                          },
                          "dog": {
                            "summary": "An example of a dog with a cat's name",
                            "value": {
                              "name": "Puma",
                              "petType": "Dog"
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "Validation failed",
                    "content": {
                      "application/xml": {
                        "examples": {
                          "response": {
                            "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emptyexample": {
      "post": {
        "description": "This operation handles has no schemas, but empty `examples`.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {}
              }
            }
          },
          "204": {
            "description": "No content"
          }
        },
        "callbacks": {
          "myCallback": {
            "{$request.query.queryUrl}": {
              "post": {
                "responses": {
                  "200": {
                    "description": "OK",
                    "content": {
                      "application/json": {
                        "examples": {}
                      }
                    }
                  },
                  "204": {
                    "description": "No content"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emptyexample-with-schema": {
      "post": {
        "description": "This operation handles has no schemas, but empty `examples`.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tag"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tag"
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "callbacks": {
          "myCallback": {
            "{$request.query.queryUrl}": {
              "post": {
                "responses": {
                  "200": {
                    "description": "OK",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/tag"
                          }
                        },
                        "examples": {}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/nothing": {
      "get": {
        "description": "This operation has neither a requestBody or response schema, but also no examples for either.",
        "responses": {},
        "callbacks": {}
      }
    },
    "/no-response-schemas": {
      "get": {
        "description": "This operation has neither a requestBody or response schema, but also no examples for either.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "callbacks": {
          "myCallback": {
            "{$request.query.queryUrl}": {
              "post": {
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ref-examples": {
      "post": {
        "description": "This operation has examples stored in a `$ref`.",
        "requestBody": {
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "examples": {
                "user": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "user": {
                        "email": "test@example.com",
                        "name": "Test user name"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Response-Ref"
          },
          "default": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "user": {
                        "id": 12343354,
                        "email": "test@example.com",
                        "name": "Test user name"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "callbacks": {
          "myCallback": {
            "{$request.query.queryUrl}": {
              "post": {
                "responses": {
                  "200": {
                    "description": "OK",
                    "content": {
                      "application/json": {
                        "examples": {
                          "response": {
                            "value": {
                              "user": {
                                "email": "test@example.com",
                                "name": "Test user name"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "$ref": "#/components/responses/400-Response-Ref"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wildcard-media-type": {
      "post": {
        "description": "This operation handles a single media type that returns a wildcard `*/*`.",
        "requestBody": {
          "required": true,
          "content": {
            "*/*": {
              "example": {
                "id": 12343354,
                "email": "test@example.com",
                "name": "Test user name"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "example": {
                  "id": 12343354,
                  "email": "test@example.com",
                  "name": "Test user name"
                }
              }
            }
          }
        }
      }
    },
    "/headers-but-no-content": {
      "post": {
        "description": "This operation has response headers but no response content or media types",
        "requestBody": {
          "content": {
            "*/*": {
              "example": {
                "id": 12343354,
                "email": "test@example.com",
                "name": "Test user name"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "description": "A response header",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/similarly-named-type-example": {
      "post": {
        "description": "This schema has two `type` properties, each with their own example. They should retain those separate examples.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "buyer": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "type": "payment",
                "buyer": {
                  "name": "Buster",
                  "type": "pug"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "user": {
        "value": {
          "id": 12343354,
          "email": "test@example.com",
          "name": "Test user name"
        }
      }
    },
    "responses": {
      "400-Response-Ref": {
        "description": "Validation failed",
        "content": {
          "application/xml": {
            "examples": {
              "response": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
