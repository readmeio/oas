// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`#getParametersAsJSONSchema() > should return json schema 1`] = `
[
  {
    "description": "Pet object that needs to be added to the store",
    "label": "Body Params",
    "schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "properties": {
        "category": {
          "properties": {
            "id": {
              "format": "int64",
              "maximum": 9223372036854776000,
              "minimum": -9223372036854776000,
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
          },
          "type": "object",
          "x-readme-ref-name": "Category",
        },
        "id": {
          "default": 40,
          "examples": [
            25,
          ],
          "format": "int64",
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "readOnly": true,
          "type": "integer",
        },
        "name": {
          "examples": [
            "doggie",
          ],
          "type": "string",
        },
        "photoUrls": {
          "items": {
            "examples": [
              "https://example.com/photo.png",
            ],
            "type": "string",
          },
          "type": "array",
        },
        "status": {
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold",
          ],
          "type": "string",
        },
        "tags": {
          "items": {
            "properties": {
              "id": {
                "format": "int64",
                "maximum": 9223372036854776000,
                "minimum": -9223372036854776000,
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "x-readme-ref-name": "Tag",
          },
          "type": "array",
        },
      },
      "required": [
        "name",
        "photoUrls",
      ],
      "type": "object",
      "x-readme-ref-name": "Pet",
    },
    "type": "body",
  },
]
`;

exports[`#prepareSecurity() > should work for petstore 1`] = `
{
  "OAuth2": [
    {
      "_key": "petstore_auth",
      "flows": {
        "implicit": {
          "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
          "scopes": {
            "read:pets": "read your pets",
            "write:pets": "modify pets in your account",
          },
        },
      },
      "type": "oauth2",
    },
  ],
}
`;
